name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    # Configure the MySQL service container
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 coverage

    - name: Run Flake8 Linter
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit with non-zero status for any other linting errors, failing the build
        flake8 . --count --max-complexity=10 --max-line-length=127 --statistics

    - name: Run Tests and Generate Coverage
      env:
        DB_ENGINE: django.db.backends.mysql
        DB_NAME: test_db
        DB_USER: root
        DB_PASSWORD: rootpassword
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      run: |
        # Run tests with coverage data generation
        coverage run -m pytest tests/ -v
        # Generate a human-readable report in the terminal
        coverage report
        # Generate XML report for potential publishing as an artifact
        coverage xml

    - name: Upload Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          coverage.xml
          htmlcov/